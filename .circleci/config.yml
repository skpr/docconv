version: 2.1

executors:
  amd64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: medium

  arm64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium

platforms: &platforms
  - amd64
  - arm64

alpine: &alpine
  - "3.17"
  - "3.18"
  - "3.19"

jobs:
  build:
    parameters:
      executor:
        type: string
      alpine:
        type: string
      push:
        type: boolean
        default: true
    machine: true
    executor: << parameters.executor >>
    steps:
      - checkout
      - run:
          name: Build and Push
          command: |
            docker build --build-arg alpine_version=<< parameters.alpine >> -t docker.io/skpr/docconv:alpine<< parameters.alpine >>-<< parameters.executor >> .
      - when:
          condition:
            equal: [ true, << parameters.push >> ]
          steps:
            - run:
                name: "Push image"
                command: |
                  docker login -u $DOCKER_USER -p $DOCKER_PASS
                  docker push docker.io/skpr/docconv:alpine<< parameters.alpine >>-<< parameters.executor >>

  manifest:
    parameters:
      alpine:
        type: string
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - run:
          name: Push Manifest
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker manifest create docker.io/skpr/docconv:alpine<< parameters.alpine >> \
              --amend docker.io/skpr/docconv:alpine<< parameters.alpine >>-arm64 \
              --amend docker.io/skpr/docconv:alpine<< parameters.alpine >>-amd64
            docker manifest push docker.io/skpr/docconv:alpine<< parameters.alpine >>

workflows:
  test:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
          matrix:
            parameters:
              executor: *platforms
              alpine: *alpine

  release:
    jobs:
      - build:
          filters:
            branches:
              only: master
          matrix:
            parameters:
              executor: *platforms
              alpine: *alpine

      - manifest:
          matrix:
            parameters:
              alpine: *alpine
          requires:
            - build
            
